.div1 {
    width: 100px;
    height: 100px;
    background-color: aquamarine;
    text-align: center;
}

/* 
    :hover  
    :active
*/

.div1:hover {
    background-color: hotpink;
    width: 150px;
    height: 150px;
}

.div1:active {
    background-color: brown;
    width: 50px;
    height: 50px;
}

/* 
    :focus
*/

input:focus {
    background-color: paleturquoise;    
    color: red;
    outline-color: red;
}

.links > a:hover {
    background-color: tomato;
}

.links > a:visited {
    color: red;
}

/* 
    > 요소 상황에 따른 가상 클래스 선택자
         :first-child
         :last-child
         :nth-child(n)
         :not(XYZ)
*/

.zoo > * {
    background-color: green;
    color: white;
}

.zoo > *:first-child {
    background-color: red;
}

.zoo > li:last-child {
    background-color: blue;
}

.zoo > *:nth-child(4) {
    background-color: aquamarine;
}

.zoo > li:not(div) {
    font-style: italic;
}

/* 
    > Pseudo elements
        * 가상 요소와 가상 클래스의 차이?
        -> css 사양이 발전하면서 가상클래스와 가상 요소를 명확하게 구분할 필요성이 생김
        가상 클래스 - 문서의 기존 요소 상태를 나타냄
        가상 요소 - 문서의 특정 부분을 생성하여 스타일링함
        그렇기에 구분하기 위해서 :: 로 표기하는 새로운 표기법을 도입.  
*/

.box::before {
    content: "택시 ";
}

.box::after {
    content: "빨리요!";
}
