<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dynamic Form</title>

    <!-- JQuery CDN (pour ajax) -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>

    <!-- AXIOS CDN -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

</head>
<body>
    <h1>Dynamic Form</h1>
    <form name="register">
        <label for="name">Name</label>
        <input type="text" id="name" placeholder="Your Name" name="name">
        <br>

        <span>Gender</span>
        <input type="radio" name="gender" value="male" id="male">
        <label for="male">Male</label>
        <input type="radio" name="gender" value="female" id="female">
        <label for="female">Female</label>
        <br>

        <button type="button" onclick="ajaxGet();">AJAX Get Request</button>
        <button type="button" onclick="ajaxPost();">AJAX Post Request</button> <br><br>
        <button type="button" onclick="axiosGet();">Axios Get Request</button>
        <button type="button" onclick="axiosPost();">Axios Post Request</button> <br><br>
        <button type="button" onclick="fetchGet();">Fetch Get Request</button>
        <button type="button" onclick="fetchPost();">Fetch Post Request</button> <br>
        
    </form>

    <divc class="result"></div>

    <script>
        const resultBox = document.querySelector('.result');

        function ajaxGet() {
            const form = document.forms['register'];

            console.dir(form);
            console.dir(form.gender);
            console.log(form.name.value);
            console.log(form.gender.value);

            const data = {
                name: form.name.value,
                gender: form.gender.value,
            };

            $.ajax({
                type: 'GET',
                url: '/ajax',
                data,
                success: function(data) {
                    console.log(data);
                    resultBox.textContent = `GET / Ajax Request: Your name is ${data.name} and you are ${data.gender}`;
                    resultBox.style.color = 'blue';
                }
            })
        }
        
        function ajaxPost() {
            const form = document.forms['register'];

            const data = {
                name: form.name.value,
                gender: form.gender.value,
            };

            $.ajax({
                type: 'POST',
                url: '/ajax',
                data,
                success: function(data) {
                    console.log(data);
                    resultBox.textContent = `POST / Ajax Request: Your name is ${data.name} and you are ${data.gender}`;
                    resultBox.style.color = 'red';
                }
            }) 
        }
    
        function axiosGet() {
            const form = document.forms['register'];

            const data = {
                name: form.name.value,
                gender: form.gender.value
            };

            axios({
                method: 'GET',
                url: '/axios',  // Method 2) `/axios?name${form.name.value}&gender=${form.gender.value}`; -> params key 쓸 필요가 없음
                params: data,
            }).then((res) => {
                console.log(res.data);
                const {name, gender} = res.data;
                resultBox.textContent = `GET / Axios Request: Your name is ${name} and you are ${gender}`;
                resultBox.style.color = 'green';
            }).catch((err) => {
                console.error(err);
                resultBox.textContent = "Error! Please try it again...";
                resultBox.style.color = 'black';
            })
        }

        function axiosPost() {
            const form = document.forms['register'];

            const data = {
                name: form.name.value,
                gender: form.gender.value
            };

            axios({
                method: 'post',
                url: '/axios',
                data,  // Get과는 다르게 params가 아니라 data이다
            }).then((res) => {
                console.log(res);
                const {name, gender} = res.data;
                resultBox.textContent = `POST / Axios Request: Your name is ${name} and you are ${gender}`;
                resultBox.style.color = 'hotpink';
            }).catch((res) => {
                console.error(err);
                resultBox.textContent = "Error! Please try again...";
                resultBox.style.color = 'black';
            })
        }
    
        function fetchGet() {
            const form = document.forms['register'];
            const urlQuery = `?name=${form.name.value}&gender=${form.gender.value}`;

            fetch(`fetch${urlQuery}`)  // default: get
                .then((res) => {
                    console.log(res);
                    return res.json();
                })
                .then((data) => {
                    console.log(data);
                    resultBox.textContent = `Get / Fetch Request: Your name is ${form.name.value} and you are ${form.gender.value}`;
                    resultBox.style.color = 'limegreen';
                })
                .catch((err) => {
                    console.error(err);
                })
        }

        function fetchPost() {
            const form = document.forms['register'];

            const data = {
                name: form.name.value,
                gender: form.gender.value
            };

            fetch('fetch', {
                method: 'POST',
                headers: {
                    'Content-type': 'application/json',
                },
                body: JSON.stringify(data)
            }).then((res) => {
                return res.json();
            }).then((data) => {
                console.log(data);
                resultBox.textContent = `Get / Fetch Request: Your name is ${form.name.value} and you are ${form.gender.value}`;
                resultBox.style.color = 'violet';
            }).catch((err) => {
                console.error(err);
            })

        }
    </script>
</body>
</html>